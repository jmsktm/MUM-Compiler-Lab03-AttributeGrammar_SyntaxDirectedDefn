/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import java.util.*;
import node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGoal(AGoal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgram(AProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassCommand(AClassCommand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProcDeclCommand(AProcDeclCommand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariableCommand(AVariableCommand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALookup1Command(ALookup1Command node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALookup2Command(ALookup2Command node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANewScopeCommand(ANewScopeCommand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEndScopeCommand(AEndScopeCommand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodScopeCommand(AMethodScopeCommand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANewBlockCommand(ANewBlockCommand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrintSymtabCommand(APrintSymtabCommand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodHdr(AMethodHdr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanType(ABooleanType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACharType(ACharType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringType(AStringType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVoidType(AVoidType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatType(AFloatType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalList(AFormalList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleFormalList(AMultipleFormalList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormal(AFormal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayFormal(AArrayFormal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhiteSpace(TWhiteSpace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSingleLineStart(TSingleLineStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSlCommentEnd(TSlCommentEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLParen(TLParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRParen(TRParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBrack(TLBrack node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBrack(TRBrack node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLCurly(TLCurly node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRCurly(TRCurly node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNewScope(TNewScope node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEndScope(TEndScope node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLookup1(TLookup1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLookup2(TLookup2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChar(TChar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloat(TFloat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTKclass(TKclass node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMethod(TMethod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVariable(TVariable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNewBlock(TNewBlock node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnclosingMethod(TEnclosingMethod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrintSymtab(TPrintSymtab node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdent(TIdent node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
